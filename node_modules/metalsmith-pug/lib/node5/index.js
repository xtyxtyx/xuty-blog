'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function () {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$locals = _ref.locals;

  let locals = _ref$locals === undefined ? {} : _ref$locals;
  var _ref$filters = _ref.filters;
  let filters = _ref$filters === undefined ? {} : _ref$filters;
  var _ref$useMetadata = _ref.useMetadata;
  let useMetadata = _ref$useMetadata === undefined ? false : _ref$useMetadata;

  const opts = arguments[0] || {};

  return (files, metalsmith, done) => {
    setImmediate(done);

    // extend with metalsmith global metadata
    if (useMetadata) {
      locals = Object.assign(locals, metalsmith.metadata());
    }

    Object.keys(files).forEach(function (file) {
      if (!/\.(pug|jade)/.test(_path2.default.extname(file))) {
        return;
      }

      let data = files[file];
      let dir = _path2.default.dirname(file);
      let name = _path2.default.basename(file, _path2.default.extname(file));

      // do we need to add an extension?
      if (_path2.default.extname(name) === '') {
        name = _path2.default.basename(file, _path2.default.extname(file)) + '.html';
      }

      if (dir !== '.') {
        name = `${ dir }/${ name }`;
      }

      const filename = _path2.default.join(metalsmith.source(), file);

      // also use the file's own data
      if (useMetadata) {
        locals = Object.assign(locals, data);
      }

      // assign filters
      if (filters) {
        Object.keys(filters).forEach(filter => _pug2.default.filters[filter] = filters[filter]);
      }

      const options = Object.assign(opts, {
        filename: filename,
        locals: locals
      });

      // render
      let str = _pug2.default.compile(data.contents.toString(), options)(locals);

      // convert to a buffer
      data.contents = new Buffer(str);

      // remove from global files object
      delete files[file];

      // assign the newly created file
      files[name] = data;
    });
  };
};

var _pug = require('pug');

var _pug2 = _interopRequireDefault(_pug);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = exports['default'];